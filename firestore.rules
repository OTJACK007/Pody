rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function hasValidFields(requiredFields) {
      return request.resource.data.keys().hasAll(requiredFields);
    }

    function isValidEmail(email) {
      return email.matches('^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$');
    }

    // Features Collection
    match /features/{featureId} {
      allow read, write: if true;
    }
    
    // Creator Space Collections
    match /creatorContent/{contentId} {
      allow read, write: if true;
    }
    
    match /creatorChannels/{channelId} {
      allow read, write: if true;
    }
    
    match /creatorAnalytics/{analyticsId} {
      allow read, write: if true;
    }
    
    match /creatorSubscriptions/{subscriptionId} {
      allow read, write: if true;
    }
    
    match /creatorMonetization/{monetizationId} {
      allow read, write: if true;
    }
    
    match /creatorSettings/{settingsId} {
      allow read, write: if true;
    }
    
    // Pod Room Collections
    match /podcastLibrary/{podcastId} {
      allow read, write: if true;
    }
    
    match /podcastEpisodes/{episodeId} {
      allow read, write: if true;
    }
    
    match /podcastShorts/{shortId} {
      allow read, write: if true;
    }
    
    match /podcastInsights/{insightId} {
      allow read, write: if true;
    }
    
    match /podcastNotes/{noteId} {
      allow read, write: if true;
    }
    
    match /podcastFavorites/{favoriteId} {
      allow read, write: if true;
    }
    
    // Feature Votes Collection
    match /featureVotes/{voteId} {
      allow read, write: if true;
    }
    
    // Feature Comments Collection
    match /featureComments/{commentId} {
      allow read, write: if true;
    }
    
    // Feature History Collection
    match /featureHistory/{historyId} {
      allow read, write: if true;
    }

    // Connected Apps Collection
    match /connectedApps/{userId} {
      allow read, write: if true;
    }

    // App Settings Collection
    match /appSettings/{appId} {
      allow read, write: if true;
    }

    // App Analytics Collection
    match /appAnalytics/{appId} {
      allow read, write: if true;
    }

    // Integration History Collection
    match /integrationHistory/{historyId} {
      allow read, write: if true;
    }

    // Analytics Collections
    match /userAnalytics/{userId} {
      allow read, write: if true;
    }

    match /analyticsHistory/{historyId} {
      allow read, write: if true;
    }

    match /analyticsMetrics/{metricId} {
      allow read, write: if true;
    }

    // Tasks & Calendar Collections
    match /tasks/{taskId} {
      allow read, write: if true;
    }

    match /taskHistory/{historyId} {
      allow read, write: if true;
    }

    match /taskCategories/{categoryId} {
      allow read, write: if true;
    }

    match /kanbanColumns/{columnId} {
      allow read, write: if true;
    }

    // Goals Collections
    match /goals/{goalId} {
      allow read, write: if true;
    }

    match /goalHistory/{historyId} {
      allow read, write: if true;
    }

    match /goalCategories/{categoryId} {
      allow read, write: if true;
    }

    match /goalInsights/{insightId} {
      allow read, write: if true;
    }

    // Knowledge Library Collections
    match /notes/{noteId} {
      allow read, write: if true;
    }

    match /summaries/{summaryId} {
      allow read, write: if true;
    }

    match /highlights/{highlightId} {
      allow read, write: if true;
    }

    match /favorites/{favoriteId} {
      allow read, write: if true;
    }

    match /knowledgeCategories/{categoryId} {
      allow read, write: if true;
    }

    match /knowledgeTags/{tagId} {
      allow read, write: if true;
    }

    // User Settings
    match /userSettings/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      
      allow create: if isAuthenticated() && 
                   isOwner(userId) &&
                   hasValidFields(['firstName', 'lastName', 'email']) &&
                   isValidEmail(request.resource.data.email);
      
      allow update: if isAuthenticated() && isOwner(userId);
    }

    // Social Accounts
    match /userSocialAccounts/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      
      allow create: if isAuthenticated() && 
                   isOwner(userId) &&
                   hasValidFields(['accounts', 'updatedAt']);
      
      allow update: if isAuthenticated() && 
                   isOwner(userId) &&
                   hasValidFields(['accounts', 'updatedAt']);
    }

    // Security Logs
    match /securityLogs/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    // Profile pictures
    match /profilePictures/{userId}/{fileName} {
      allow read, write: if true;
    }

    // Social media assets
    match /socialMedia/{userId}/{fileName} {
      allow read, write: if true;
    }

    // Billing documents
    match /billing/{userId}/{fileName} {
      allow read, write: if true;
    }
  }
}