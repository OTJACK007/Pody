rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function hasValidFields(requiredFields) {
      return request.resource.data.keys().hasAll(requiredFields);
    }
    
    // User Settings
    match /userSettings/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      
      allow create: if isAuthenticated() && 
                   isOwner(userId) &&
                   hasValidFields(['firstName', 'lastName', 'email']);
      
      allow update: if isAuthenticated() && isOwner(userId);
      
      // Validate specific settings updates
      match /appearance {
        allow update: if isAuthenticated() && 
                     isOwner(userId) &&
                     request.resource.data.keys().hasAll(['theme']);
      }
      
      match /notifications {
        allow update: if isAuthenticated() && 
                     isOwner(userId) &&
                     request.resource.data.keys().hasAll(['email', 'browser', 'mobile']);
      }
      
      match /privacy {
        allow update: if isAuthenticated() && 
                     isOwner(userId) &&
                     request.resource.data.keys().hasAll(['showProfile', 'showListeningActivity']);
      }
      
      match /language {
        allow update: if isAuthenticated() && 
                     isOwner(userId) &&
                     request.resource.data.keys().hasAll(['language', 'region']);
      }
    }
  }
}